apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb
data:
  database-name: admin

---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb
type: Opaque
data:
  database-user: dGVzdA== # test
  database-password: dGVzdDEyMw== # test123

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  serviceName: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:5.0.5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
          env:
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mongodb
                  key: database-name
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: database-user
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: database-password
      volumes:
        - name: mongo-data
          hostPath:
            # 节点上的路径(minikube 容器内的路径)
            # Docker for Mac Descktop 在 Settings -> Resources -> FILE SHARING 挂载的分区
            path: /data/mongo-data
            type: DirectoryOrCreate     # 指向一个目录，不存在时自动创建

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  clusterIP: None # headless
  ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
  selector:
    app: mongodb
  type: ClusterIP
