#
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: example-spring-cloud-kubernetes-traefik
  namespace: example-spring-cloud-kubernetes
  labels:
    app: example-spring-cloud-kubernetes-traefik
spec:
  selector:
    matchLabels:
      app: example-spring-cloud-kubernetes-traefik
  template:
    metadata:
      labels:
        app: example-spring-cloud-kubernetes-traefik
    spec:
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      restartPolicy: Always
#      nodeSelector:
#        edgenode: "true"
      containers:
        - image: traefik:v2.3
          name: example-spring-cloud-kubernetes-traefik
          resources:
            limits:
              cpu: 200m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
          ports:
            - name: http
              containerPort: 80
              hostPort: 80
            - name: admin
              containerPort: 8080
          args:
            - --web
            - --web.address=:8080
            - --kubernetes

---
apiVersion: v1
kind: Service
metadata:
  name: example-spring-cloud-kubernetes-traefik-web-ui
  namespace: example-spring-cloud-kubernetes
spec:
  selector:
    app: example-spring-cloud-kubernetes-traefik
  ports:
    - name: web
      port: 80
      targetPort: 8580
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: example-spring-cloud-kubernetes-traefik-web-ui
  namespace: example-spring-cloud-kubernetes
spec:
  rules:
    - host: traefik-ui.local
      http:
        paths:
          - path: /
            backend:
              serviceName: example-spring-cloud-kubernetes-traefik-web-ui
              servicePort: web
