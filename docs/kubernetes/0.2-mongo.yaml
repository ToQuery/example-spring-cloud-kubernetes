apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb
  namespace: example-spring-cloud-kubernetes
data:
  database-name: admin

---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb
  namespace: example-spring-cloud-kubernetes
type: Opaque
data:
  database-user: dGVzdA== # test
  database-password: dGVzdDEyMw== # test123

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: example-spring-cloud-kubernetes
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  serviceName: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:5.0.5
          imagePullPolicy: IfNotPresent
          command: [ "mongod" ]
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
          env:
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mongodb
                  key: database-name
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: database-user
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: database-password
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongodata

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: example-spring-cloud-kubernetes
spec:
  clusterIP: None # headless
  ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
  selector:
    app: mongodb
  type: ClusterIP
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
  namespace: example-spring-cloud-kubernetes
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodata
  namespace: example-spring-cloud-kubernetes
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem  # Filesystem（文件系统） Block（块）
  accessModes:
    - ReadOnlyMany
    - ReadWriteMany
    - ReadWriteOnce       # 卷可以被一个节点以读写方式挂载
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /Users/toquery/data/mongo-data2 # 挂载的实际路径
  nodeAffinity:
    required:
      # 通过 hostname 限定在某个节点创建存储卷
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodata
  namespace: example-spring-cloud-kubernetes
spec:
  accessModes: [ "ReadWriteOnce" ]
  storageClassName: "local-storage"
  resources:
    requests:
      storage: 2Gi
